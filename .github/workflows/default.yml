name: CI-Build-Docs

on:
  push:
    branches:    
      - master

jobs:
  build:

    runs-on: ubuntu-latest # 20.04 (despite there being later ironically)

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
    # Standard drop-in approach that should work for most people.
    # Example of using a custom build-command.
    - uses: ammaraskar/sphinx-action@master
      with:
        pre-build-command: "apt-get update -y --allow-releaseinfo-change \n apt-get upgrade -y \n apt-get install -y -f latexmk texlive texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended dvipng cm-super tree \n apt-get update -y --fix-missing --allow-releaseinfo-change \n python3 -m pip install -e ."
        build-command: "sphinx-build -b html . build"
        docs-folder: "docs/source/"
    # Create an artifact of the html output.
    - uses: actions/upload-artifact@v3
      with:
        name: DocumentationHTML
        path: docs/source/build
    # Publish built docs to gh-pages branch.
    # ===============================
    - name: Commit documentation changes
      run: |
        git clone https://github.com/joma5012/StatOD.git --branch gh-pages --single-branch gh-pages
        cp -r docs/source/build/* gh-pages/
        cd gh-pages
        touch .nojekyll
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update documentation" -a || true
        # The above command will fail if no changes were present, so we ignore
        # that.
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: gh-pages
        directory: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}